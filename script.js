// ЁЯУШ Let's understand Complexity

// ржпржЦржи ржХрзЛржирзЛ ржЯрж╛рж╕рзНржХрзЗрж░ ржХрж╛рж░рзНржпржХрж╛рж░рж┐рждрж╛ (efficiency) ржмрж╛ ржХрзЛржбрзЗрж░ performance ржХрзЗржоржи рж╣ржмрзЗ,
// ржЕрж░рзНржерж╛рзО рж╕ржорзЯ ржУ ржорзЗржорзЛрж░рж┐ ржХрждржЯрзБржХрзБ рж▓рж╛ржЧржмрзЗ тАФ рж╕рзЗржЯрж╛ ржмрзЛржЭрж╛рждрзЗ ржЖржорж░рж╛ "Complexity" ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред

// ЁЯУШ Time Complexity

// ржкрзНрж░ржержорзЗржЗ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рзЗ ржирж┐ржЗ: time/рж╕ржорзЯ ржПрж░ рж╕ржЩрзНржЧрзЗ Time Complexity ржПрж░ ржХрзЛржиржУ рж╕рж░рж╛рж╕рж░рж┐ рж╕ржорзНржкрж░рзНржХ ржирзЗржЗ!
// ржорж╛ржирзЗ, ржХрзЛржб рж░рж╛ржи рж╣рждрзЗ ржмрж╛рж╕рзНрждржмрзЗ ржХржд рж╕рзЗржХрзЗржирзНржб рж▓рж╛ржЧрж▓ тАФ рж╕рзЗржЯрж╛ Time Complexity ржирж╛ тЭМ

// тЬЕ рждрж╛рж╣рж▓рзЗ Time Complexity ржХрзА?

// Time Complexity ржмрзЛржЭрж╛рзЯ тАФ
// "ржПржХржЯрж┐ ржХрзЛржб ржЪрж╛рж▓рж╛рждрзЗ ржХрждржЧрзБрж▓рзЛ ржЕржкрж╛рж░рзЗрж╢ржи (steps) ржмрж╛ ржХрж╛ржЬ рж╣рзЯ,
// ржПржмржВ ржПржЗ ржХрж╛ржЬржЧрзБрж▓рзЛ ржЗржиржкрзБржЯ рж╕рж╛ржЗржЬ `n` ржПрж░ ржЙржкрж░ ржХрждржЯрж╛ ржирж┐рж░рзНржнрж░рж╢рзАрж▓ред"

// ЁЯСЙ ржПржХрзЗ ржмрж▓рж╛ ржпрж╛рзЯ:
// Amount of operations taken as a function of input size n

// тЪая╕П ржоржирзЗ рж░рж╛ржЦрзЛ:
// ржПржЦрж╛ржирзЗ 'рж╕ржоржпрж╝' ржмрж▓рждрзЗ ржмрзЛржЭрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ тЖТ ржХрзЛржбрзЗ ржХрзЯржЯрж┐ рж╕рзНржЯрзЗржк ржмрж╛ ржЗржирж╕рзНржЯрзНрж░рж╛ржХрж╢ржи рж╣ржЪрзНржЫрзЗ,
// ржмрж╛рж╕рзНрждржмрзЗрж░ ржШрзЬрж┐рж░ рж╕ржорзЯ (seconds, milliseconds) ржирзЯред

// ржЙржжрж╛рж╣рж░ржг:
// function printAll(arr) {
//   for (let i = 0; i < arr.length; i++) {
//     console.log(arr[i]); // n ржмрж╛рж░ ржЪрж▓ржмрзЗ
//   }
// }

// ЁЯСЙ ржЙржкрж╕ржВрж╣рж╛рж░:
// ржЗржиржкрзБржЯ ржпржд ржмрзЬ рж╣ржмрзЗ (n ржмрж╛рзЬржмрзЗ), ржХрзЛржбрзЗ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ рждржд ржмрж╛рзЬржмрзЗред
// Time Complexity рж╕рзЗржЗ ржЕржирзБржкрж╛рждрзЗ ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣рзЯред

// ЁЯУШ Handling for large input

// ЁЯЯб Important : Time complexity рж╕ржмрж╕ржоржпрж╝ large input ржПрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗржЗ ржмрж┐ржмрзЗржЪржирж╛ ржХрж░рж╛ рж╣ржпрж╝

// ЁЯза ржЪрж▓ ржПржХржЯрж╛ ржмрж╛рж╕рзНрждржм ржЙржжрж╛рж╣рж░ржг ржжрзЗржЗ:

// ржзрж░рж┐, ржПржХржЯрж╛ ржХрзЛржорзНржкрж╛ржирж┐ ржЖржЫрзЗред
// рж╕рзЗржЦрж╛ржирзЗ ржпржжрж┐ ржорж╛рждрзНрж░ рзз ржЬржи ржХрж░рзНржоржЪрж╛рж░рзА ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ рждрж╛рж░ ржЗржиржлрж░ржорзЗрж╢ржи ржорзБржЦрж╕рзНрже рж░рзЗржЦрзЗржЗ ржорзНржпрж╛ржирзЗржЬ ржХрж░рж╛ рж╕ржорзНржнржмред

// рззрзж ржЬржи рж╣рж▓рзЗ? ржарж┐ржХ ржЖржЫрзЗ тАФ ржПржХржЯрж╛ ржЦрж╛рждрж╛рзЯ рж▓рж┐ржЦрзЗ рж░рж╛ржЦрж▓рзЗржЗ ржЪрж▓ржмрзЗред
// рзлрзж ржЬржи? ржПржХржЯрзБ рж╕ржорзЯ рж▓рж╛ржЧржмрзЗ, ржХрж┐ржирзНрждрзБ рждрж╛ржУ ржорзНржпрж╛ржирзЗржЬрзЗржмрж▓ред
// ржХрж┐ржирзНрждрзБ...

// ржпржЦржи ржХрж░рзНржоржЪрж╛рж░рзАрж░ рж╕ржВржЦрзНржпрж╛ рззрзжрзжрзж ржмрж╛ рззрзж,рзжрзжрзж ржЫрж╛рзЬрж┐рзЯрзЗ ржпрж╛ржмрзЗ,
// рждржЦржи ржЖрж░ ржХрж╛ржЧржЬ-ржХрж▓ржо ржжрж┐рзЯрзЗ ржорзНржпрж╛ржирзЗржЬ ржХрж░рж╛ рж╕ржорзНржнржм ржирж╛!
// рждржЦржи ржжрж░ржХрж╛рж░ рж╣рзЯ тАФ
// тЬЕ ржПржХржЯрж╛ рж╕рж┐рж╕рзНржЯрзЗржо!
// тЬЕ ржжржХрзНрж╖ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ рж▓ржЬрж┐ржХ!
// тЬЕ ржПржмржВ рж╕рзЗржЗ рж╕рж╛ржерзЗ, ржХрзЛржб ржХрзЗржоржи рж╕рзНржХрзЗрж▓ ржХрж░рзЗ тАФ рж╕рзЗржЯрж╛ ржмрзЛржЭрж╛рж░ ржЬржирзНржп Time Complexity!

// ЁЯУМ Bottom Line:
// ржЫрзЛржЯ ржЗржиржлрж░ржорзЗрж╢ржирзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ Time Complexity ржирж┐рзЯрзЗ ржнрж╛ржмрж╛рж░ ржжрж░ржХрж╛рж░ ржкрзЬрзЗ ржирж╛ред
// ржХрж┐ржирзНрждрзБ ржбрзЗржЯрж╛ ржпржЦржи "Huge" рж╣рзЯрзЗ ржпрж╛ржмрзЗ, рждржЦржи efficient ржХрзЛржб рж▓рж┐ржЦрждрзЗржЗ
// Time Complexity ржПрж░ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржжрж░ржХрж╛рж░ рж╣рзЯред
// ЁЯУШ Complexity Representation

// ржпрзЗржоржи:
// - ржУржЬржи ржкрж░рж┐ржорж╛ржкрзЗ тЖТ kg
// - ржжрзВрж░рждрзНржм ржкрж░рж┐ржорж╛ржкрзЗ тЖТ km
// - рждрж░рж▓ ржкрж░рж┐ржорж╛ржкрзЗ тЖТ liter

// ржарж┐ржХ рждрзЗржоржиржЗ,
// ржХрзЛржбрзЗрж░ Efficiency ржмрж╛ Time Complexity ржкрж░рж┐ржорж╛ржк ржХрж░рждрзЗ ржЖржорж░рж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ ржХрж┐ржЫрзБ Notationред

// тЬЕ ржПржЗ рждрж┐ржиржЯрж┐ Notation ржжрж┐рзЯрзЗ ржЖржорж░рж╛ Complexity Represent ржХрж░рж┐:

// 1я╕ПтГг Big O (Upper Bound / Worst Case)
// 2я╕ПтГг Theta ╬Ш (Exact / Average Case)
// 3я╕ПтГг Omega ╬й (Lower Bound / Best Case)

// ржХрж┐ржирзНрждрзБ ржЖржорж░рж╛ рж╕рж╛ржзрж╛рж░ржгржд Big O ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред ржХрзЗржи?

// ЁЯкЩ ржпрзЗржоржи рзл ржЯрж╛ржХрж╛, рзл ржбрж▓рж╛рж░, рзл рж░рзБржкрж┐ тАФ рж╕ржмржЗ 'рзл' рж╣рж▓рзЗржУ currency ржнрж┐ржирзНржи рж╣рзЯ, ржЕрж░рзНрже ржнрж┐ржирзНржи ржмрзЛржЭрж╛рзЯред
// рждрзЗржоржиржЗ ржПржЗ рждрж┐ржиржЯрж┐ Notation-ржЗ ржХрзЛржирзЛ ржПржХржЯрж┐ ржХрж╛ржЬржХрзЗ Represent ржХрж░рзЗ ржнрж┐ржирзНржи ржнрж┐ржирзНржи ржжрзГрж╖рзНржЯрж┐ржХрзЛржг ржерзЗржХрзЗред

// ЁЯЯб ржЖржорж░рж╛ Big O ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ ржХрж╛рж░ржг:
// ржЖржорж░рж╛ рж╕рж╛ржзрж╛рж░ржгржд **worst case** ржирж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░рж┐,
// ржпрзЗржи рж╕ржмржЪрзЗрзЯрзЗ ржЦрж╛рж░рж╛ржк ржкрж░рж┐рж╕рзНржерж┐рждрж┐рждрзЗржУ ржХрзЛржб ржХржд ржнрж╛рж▓рзЛ ржЪрж▓рзЗ рж╕рзЗржЯрж╛ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ред

// ЁЯУМ ржПржЦржи ржЪрж▓ ржПржХрзНрж╕рж╛ржорзНржкрж▓ ржжрж┐рзЯрзЗ ржмрзБржЭрж┐:
// -------------------------------------

// ЁЯза Big O (Upper Bound / Worst Case):
// - ржЕрж░рзНрже: ржПрж░ ржЪрзЗрзЯрзЗ ржЦрж╛рж░рж╛ржк рж╣ржмрзЗ ржирж╛, ржПржЗ рж╣ржЪрзНржЫрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ рж╕ржорзЯ ржмрж╛ ржЕржкрж╛рж░рзЗрж╢ржиред
// - ржЙржжрж╛рж╣рж░ржг: "A ржерзЗржХрзЗ B ржпрзЗрждрзЗ max рззрзж ржорж┐ржирж┐ржЯ рж▓рж╛ржЧрждрзЗ ржкрж╛рж░рзЗред" тЖТ ржПрж░ ржмрзЗрж╢рж┐ ржирж╛ред
// - ржПржЯрж╛ржХрзЗржЗ ржмрж▓рзЗ Worst Case / Upper Boundред

// ЁЯза Theta ╬Ш (Average Case):
// - ржЕрж░рзНрже: ржЧрзЬ рж╕ржорзЯ ржмрж╛ ржЧрзЬ ржЕржкрж╛рж░рзЗрж╢ржи рж╕ржВржЦрзНржпрж╛ред
// - ржЙржжрж╛рж╣рж░ржг: "A ржерзЗржХрзЗ B ржпрзЗрждрзЗ рж╕рж╛ржзрж╛рж░ржгржд рзм-рзн ржорж┐ржирж┐ржЯ рж▓рж╛ржЧрзЗред" тЖТ ржПржЯрж╛ рж╣рж▓ Thetaред

// ЁЯза Omega ╬й (Lower Bound / Best Case):
// - ржЕрж░рзНрже: ржПрж░ ржХржорзЗ рж╣ржмрзЗ ржирж╛, ржПржЯрж┐ рж╣ржЪрзНржЫрзЗ рж╕рж░рзНржмржирж┐ржорзНржи рж╕ржорзЯ ржмрж╛ ржЕржкрж╛рж░рзЗрж╢ржиред
// - ржЙржжрж╛рж╣рж░ржг: "A ржерзЗржХрзЗ B ржпрзЗрждрзЗ ржХржоржкржХрзНрж╖рзЗ рззрзж ржорж┐ржирж┐ржЯ рж▓рж╛ржЧржмрзЗржЗред" тЖТ ржПрж░ ржЪрзЗрзЯрзЗ ржХржо рж╣ржмрзЗ ржирж╛, ржмрзЗрж╢рж┐ рж╣рждрзЗ ржкрж╛рж░рзЗред

// тЬЕ Bottom Line:
// рждрж╛ржЗ ржЖржорж░рж╛ ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗ рж╕ржмржЪрзЗрзЯрзЗ ржЦрж╛рж░рж╛ржк ржкрж░рж┐рж╕рзНржерж┐рждрж┐рж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржирж┐рждрзЗ ржЪрж╛ржЗ,
// ржПржЬржирзНржп **Big O Notation**-ржЗ Time Complexity ржмрзЛржЭрж╛рждрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ ржмрзНржпржмрж╣рзГржд рж╣рзЯред

// ЁЯУШ Type and Graph

// тЬЕ Constant Time тАФ O(1)

// ржпржЦржи ржХрзЛржирзЛ task ржПржХ ржзрж╛ржкрзЗ (one step) рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛рзЯ, рждржЦржи ржЖржорж░рж╛ рж╕рзЗржЯрж╛ржХрзЗ ржмрж▓рж┐ Constant Time Complexity ржмрж╛ O(1)

// ржЖржмрж╛рж░, ржпржЦржи ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ (fixed) value-ржПрж░ ржЙржкрж░ ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржи ржЪрж╛рж▓рж╛ржирзЛ рж╣ржпрж╝, рждржЦржи рж╕рзЗржЯрж┐ржУ O(1) рж╣рзЯред
// ржХрж┐ржирзНрждрзБ ржпржжрж┐ рж╕рзЗржЗ value ржбрж╛ржпрж╝ржирж╛ржорж┐ржХ рж╣ржпрж╝ ржмрж╛ ржЖржЧрзЗ ржерзЗржХрзЗ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржирж╛ ржерж╛ржХрзЗ,
// рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ O(1) ржирж╛ржУ рж╣рждрзЗ ржкрж╛рж░рзЗ тАФ ржХрж╛рж░ржг рждржЦржи ржЖржорж░рж╛ ржирж┐рж╢рзНржЪрж┐ржд ржирж╛ ржХрждржмрж╛рж░ ржЕржкрж╛рж░рзЗрж╢ржи ржЪрж▓ржмрзЗред

// тЬЕ Constant Time (O(1)) ржЙржжрж╛рж╣рж░ржг:

// let arr = [10, 20, 30];
// console.log(arr[1]); // O(1) тАФ ржХрж╛рж░ржг ржирж┐рж░рзНржжрж┐рж╖рзНржЯ index access ржХрж░ржЫрж┐

// ЁЯУМ ржирзЛржЯ:
// Array ржерзЗржХрзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ index access, ржХрзЛржирзЛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ variable ржПрж░ ржЙржкрж░ ржХрж╛ржЬ тАФ ржПржЧрзБрж▓рзЛ рж╕ржмржЗ Constant Time, ржХрж╛рж░ржг input ржПрж░ size ржмрж╛ржбрж╝рж▓рзЗржУ ржПржЗ ржХрж╛ржЬржЯрж╛ ржПржХ ржзрж╛ржкрзЗ рж╣рзЯред

// тЭМ Constant Time ржирзЯ (O(n)) ржЙржжрж╛рж╣рж░ржг:

// ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ ржЕржирзБржпрж╛ржпрж╝рзА рж▓рзБржкрзЗрж░ ржкрж░рж┐ржорж╛ржг ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣ржЪрзНржЫрзЗ

// let n = Number(prompt("Enter number of times to run loop:")); // ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ
// for (let i = 0; i < n; i++) {
//   console.log(i);
// }

// ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
// ржПржЦрж╛ржирзЗ рж▓рзБржк ржЪрж╛рж▓рж╛ржирзЛ рж╣ржмрзЗ n ржмрж╛рж░, ржпрзЗржЦрж╛ржирзЗ n ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯред
// ржЕрж░рзНржерж╛рзО, ржЕржкрж╛рж░рзЗрж╢ржи ржкрж░рж┐ржорж╛ржг ржЗржиржкрзБржЯ рж╕рж╛ржЗржЬрзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░рж╢рзАрж▓ред
// рждрж╛ржЗ ржПржЗ ржЕржкрж╛рж░рзЗрж╢ржиржЯрж┐ Constant Time ржирзЯ

// ЁЯУШ Linear Time Complexity тАФ O(n)

// ржпржЦржи ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржи ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржиржпрж╝,
// ржЕрж░рзНржерж╛рзО ржХрж╛ржЬрзЗрж░ ржкрж░рж┐ржорж╛ржг ржЗржиржкрзБржЯ рж╕рж╛ржЗржЬ (n) ржПрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░ ржХрж░рзЗ,
// рждржЦржи рж╕рзЗржЯрж╛ржХрзЗ Linear Time Complexity ржмрж╛ O(n) ржмрж▓рзЗред

// ржХрж╛рж░ржг, ржЗржиржкрзБржЯ ржмрзЬ рж╣рж▓рзЗ ржХрж╛ржЬрзЗрж░ ржкрж░рж┐ржорж╛ржгржУ рж╕рзЛржЬрж╛ ржЕржирзБржкрж╛рждрзЗ ржмрзГржжрзНржзрж┐ ржкрж╛рзЯред

// ржЙржжрж╛рж╣рж░ржг:
// let n = parseInt(prompt("Enter number of times to run loop:"));

// for (let i = 0; i < n; i++) {
//   console.log(i); // n ржмрж╛рж░ ржЕржкрж╛рж░рзЗрж╢ржи ржЪрж▓ржЫрзЗ
// }

// ржПржЗ ржХрзНрж╖рзЗрждрзНрж░рзЗ, рж▓рзБржк ржЪрж╛рж▓рж╛ржирзЛрж░ рж╕ржВржЦрзНржпрж╛ ржирж┐рж░рзНржнрж░ ржХрж░ржЫрзЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржжрзЗржУржпрж╝рж╛ n ржПрж░ ржЙржкрж░,
// рждрж╛ржЗ Time Complexity рж╣рж▓ O(n)ред

// ЁЯУШ Quadratic Time Complexity тАФ O(n┬▓)

// ржпржЦржи ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржи nested loop ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯ,
// ржЕрж░рзНржерж╛рзО рж▓рзБржкрзЗрж░ ржнрж┐рждрж░рзЗ ржЖрж░рзЗржХржЯрж╛ рж▓рзБржк ржерж╛ржХрзЗ,
// рждржЦржи ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ рж╣рзЯ n ├Ч n ржмрж╛ n┬▓ рж╣рж╛рж░рзЗ ржмрзГржжрзНржзрж┐ ржкрж╛рзЯред

// let n = Number(prompt("Enter a number:"));

// for (let i = 0; i < n; i++) {
//   for (let j = 0; j < n; j++) {
//     console.log(i, j); // ржЕржкрж╛рж░рзЗрж╢ржи ржЪрж▓ржЫрзЗ n ├Ч n ржмрж╛рж░
//   }
// }

// ржПржЦрж╛ржирзЗ,
// ржмрж╛ржЗрж░рзЗрж░ рж▓рзБржк n ржмрж╛рж░ ржЪрж▓ржмрзЗ,
// ржПржмржВ ржкрзНрж░рждрж┐ржмрж╛рж░ ржнрж┐рждрж░рзЗрж░ рж▓рзБржк n ржмрж╛рж░ ржЪрж▓ржмрзЗ,
// рждрж╛ржЗ ржорзЛржЯ ржЕржкрж╛рж░рзЗрж╢ржи рж╣ржмрзЗ n ├Ч n = n┬▓
// рждрж╛ржЗ Time Complexity рж╣рж▓ O(n┬▓)

// ржПрж░ ржорж╛ржирзЗ,
// ржЗржиржкрзБржЯрзЗрж░ рж╕ржВржЦрзНржпрж╛ n рж╣рж▓рзЗ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ n ├Ч n рж╣рж╛рж░рзЗ ржмрзГржжрзНржзрж┐ ржкрж╛ржмрзЗред

// ЁЯУШ Cubic Time Complexity тАФ O(n┬│)

// ржпржЦржи ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржи triple nested loop ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯ,
// ржЕрж░рзНржерж╛рзО рж▓рзБржкрзЗрж░ ржнрж┐рждрж░рзЗ рж▓рзБржк, ржЖрж░ рждрж╛рж░ ржнрж┐рждрж░рзЗ ржЖрж░рзЗржХржЯрж╛ рж▓рзБржк ржерж╛ржХрзЗ,
// рждржЦржи ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ рж╣рзЯ n ├Ч n ├Ч n = n┬│ рж╣рж╛рж░рзЗ ржмрзГржжрзНржзрж┐ ржкрж╛рзЯред

// let n = parseInt(prompt("Enter a number:"));

// for (let i = 0; i < n; i++) {
//   for (let j = 0; j < n; j++) {
//     for (let k = 0; k < n; k++) {
//       console.log(i, j, k); // ржЕржкрж╛рж░рзЗрж╢ржи ржЪрж▓ржЫрзЗ n ├Ч n ├Ч n = n┬│ ржмрж╛рж░
//     }
//   }
// }

// ржПржЦрж╛ржирзЗ,
// ржмрж╛ржЗрж░рзЗрж░ рж▓рзБржк n ржмрж╛рж░ ржЪрж▓ржмрзЗ,
// ржнрж┐рждрж░рзЗрж░ ржжрзНржмрж┐рждрзАрзЯ рж▓рзБржк n ржмрж╛рж░ ржЪрж▓ржмрзЗ,
// ржЖрж░ рждрзГрждрзАрзЯ рж▓рзБржкржУ n ржмрж╛рж░ ржЪрж▓ржмрзЗ,
// рждрж╛ржЗ ржорзЛржЯ ржЕржкрж╛рж░рзЗрж╢ржи рж╣ржмрзЗ n ├Ч n ├Ч n = n┬│
// рждрж╛ржЗ Time Complexity рж╣рж▓ O(n┬│)

// ржПрж░ ржорж╛ржирзЗ,
// ржЗржиржкрзБржЯрзЗрж░ рж╕ржВржЦрзНржпрж╛ n рж╣рж▓рзЗ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ n┬│ рж╣рж╛рж░рзЗ ржмрзГржжрзНржзрж┐ ржкрж╛ржмрзЗред

// ЁЯУШ Logarithmic Time Complexity тАФ O(log n)

// ржпржЦржи ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржи ржкрзНрж░рждрж┐ржмрж╛рж░ ржЗржиржкрзБржЯ рж╕рж╛ржЗржЬржХрзЗ ржЖржВрж╢рж┐ржХ ржХрж░рзЗ ржХржорж┐рзЯрзЗ ржирзЗрзЯ,
// ржпрзЗржоржи ржкрзНрж░рждрж┐ ржзрж╛ржкрзЗ ржЗржиржкрзБржЯржХрзЗ ржжрзБржЗржнрж╛ржЧ ржХрж░рж╛ рж╣рзЯ,
// рждржЦржи ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ ржмрж╛рзЬрзЗ ржзрзАрж░ ржЧрждрж┐рждрзЗ, ржЕрж░рзНржерж╛рзО log n рж╣рж╛рж░рзЗред

// рж╕ржмржЪрзЗрзЯрзЗ ржкрж░рж┐ржЪрж┐ржд ржЙржжрж╛рж╣рж░ржг тАФ Binary Search algorithmред

// ржЙржжрж╛рж╣рж░ржг: Binary Search-ржП ржкрзНрж░рждрж┐ржмрж╛рж░ рж╕рж╛рж░рзНржЪ рж╕рзНржкрзЗрж╕ржХрзЗ ржжрзБржЗржнрж╛ржЧрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рзЯред

// let sortedArr = [2, 4, 6, 8, 10, 12, 14, 16];
// let target = 10;

// function binarySearch(arr, target) {
//   let left = 0;
//   let right = arr.length - 1;

//   while (left <= right) {
//     let mid = Math.floor((left + right) / 2);

//     if (arr[mid] === target) return mid;
//     else if (arr[mid] < target) left = mid + 1;
//     else right = mid - 1;
//   }
//   return -1; // ржирж╛ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗрж▓рзЗ
// }

// console.log(binarySearch(sortedArr, target)); // Output: 4

// ржПржЦрж╛ржирзЗ,
// ржкрзНрж░рждрж┐ржмрж╛рж░ ржЖржорж░рж╛ ржЦрзБржБржЬрждрзЗ ржпрж╛ржУрзЯрж╛ ржПрж▓рж╛ржХрж╛ ржЕрж░рзНржзрзЗржХ ржХрж░рзЗ ржжрж┐ржЪрзНржЫрж┐,
// рждрж╛ржЗ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ n ржПрж░ ржкрж░рж┐ржмрж░рзНрждрзЗ log n рж╣рж╛рж░рзЗ ржмрж╛рзЬрзЗ,
// ржпрж╛ ржЕржирзЗржХ ржжрзНрж░рзБрждред

// ржПрж░ ржорж╛ржирзЗ,
// ржЗржиржкрзБржЯрзЗрж░ рж╕ржВржЦрзНржпрж╛ n ржмрж╛рзЬрж▓рзЗржУ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ ржзрзАрж░рзЗ ржзрзАрж░рзЗ ржмрж╛рзЬрзЗред

// ЁЯУШ Exponential Time Complexity тАФ O(2тБ┐)

// ЁЯСЙ ржпржЦржи ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛рзЯ ржкрзНрж░рждрж┐ ржзрж╛ржкрзЗ рзиржЯрж╛ ржХрж░рзЗ ржирждрзБржи рж░рж╛рж╕рзНрждрж╛рзЯ ржпрзЗрждрзЗ рж╣рзЯ,
// рждржЦржи ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ рж╕ржВржЦрзНржпрж╛ 2^n рж╣рж╛рж░рзЗ ржмрзЗрзЬрзЗ ржпрж╛рзЯред
// ржПржЯрж╛ржХрзЗржЗ ржмрж▓рзЗ Exponential Time Complexityред

// ЁЯОп ржпрзЗржоржи ржзрж░рзЛ тАФ ржлрж┐ржмрзЛржирж╛ржЪрзНржЪрж┐ рж╕рж┐рж░рж┐ржЬ (Recursive ржнрж╛ржмрзЗ рж▓рж┐ржЦрж▓рзЗ)

// ржлрж┐ржмрзЛржирж╛ржЪрзНржЪрж┐ ржорж╛ржирзЗ:
// 0 1 1 2 3 5 8 13 ...
// ржпрзЗржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛ = ржЖржЧрзЗрж░ ржжрзБржЗржЯрж╛ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓

// ЁЯФБ ржЖржорж░рж╛ ржпржжрж┐ рж░рж┐ржХрж╛рж░рзНрж╕рж┐ржнржнрж╛ржмрзЗ ржХрж░рж┐,
// рждрж╛рж╣рж▓рзЗ ржкрзНрж░рждрж┐ржмрж╛рж░ рзиржЯрж╛ ржирждрзБржи ржХрж▓ рж╣рзЯ: n-1 ржЖрж░ n-2 ржПрж░ ржЬржирзНржп

// function fibonacci(n) {
//   if (n <= 1) return n; // base case: 0 ржмрж╛ 1 рж╣рж▓рзЗ рж╕рзЗржЯрж╛ржЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж┐
//   return fibonacci(n - 1) + fibonacci(n - 2); // ржжрзБржЗржЯрж╛ рж░рж╛рж╕рзНрждрж╛рзЯ ржнрж╛ржЧ рж╣рзЯрзЗ ржпрж╛рзЯ
// }

// console.log(fibonacci(5)); // Output: 5

// ЁЯФО ржПржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржмрж╛рж░ рзиржЯрж╛ ржХрж░рзЗ ржирждрзБржи ржХрж▓ рж╣ржУрзЯрж╛рзЯ,
// ржпржд n ржмрж╛рзЬрзЗ, ржХрж╛ржЬрзЗрж░ ржкрж░рж┐ржорж╛ржг ржЕржирзЗржХ ржжрзНрж░рзБржд ржмрж╛рзЬрзЗ тАФ рждрж╛ржЗ 2^n time рж▓рж╛ржЧрзЗред

// ЁЯУШ Factorial Time Complexity тАФ O(n!) ржХрж┐?

// ржпржЦржи рждрзЛржорж╛рж░ ржХрж╛ржЬ ржПржоржи рж╣рзЯ, ржпрзЗржЦрж╛ржирзЗ рж╕ржм рж╕ржорзНржнрж╛ржмрзНржп рж╕рж╛ржЬрж╛ржирзЛрж░ ржЙржкрж╛рзЯ (Permutation) ржжрзЗржЦрждрзЗ рж╣рзЯ, рждржЦржи ржХрж╛ржЬрзЗрж░ ржкрж░рж┐ржорж╛ржг ржжрзНрж░рзБржд ржмрж╛рзЬрзЗред

// ржЙржжрж╛рж╣рж░ржг:
// ржзрж░рзЛ рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ рзй ржЯрж╛ ржлрж▓ ржЖржЫрзЗ: ржЖржкрзЗрж▓ (A), ржХрж▓рж╛ (B), ржЖржо (C)

// рж╕рж╛ржЬрж╛ржирзЛрж░ ржЙржкрж╛рзЯржЧрзБрж▓рзЛ:
// ABC, ACB, BAC, BCA, CAB, CBA

// ржорзЛржЯ рзмржЯрж┐ рж╕рж╛ржЬрж╛ржирзЛрж░ ржЙржкрж╛рзЯ, ржЕрж░рзНржерж╛рзО 3! = 3 ├Ч 2 ├Ч 1 = 6

// ржмрзЬ рж╣рж▓рзЗ:
// 4! = 24, 5! = 120, 10! = 3,628,800

// Factorial Time Complexity ржорж╛ржирзЗ ржХрж╛ржЬрзЗрж░ ржкрж░рж┐ржорж╛ржг n! рж╣рж╛рж░рзЗ ржмрж╛рзЬрзЗ,
// ржпрж╛ ржжрзНрж░рзБржд ржмрзЗрзЬрзЗ ржЕржирзЗржХ рж╕ржорзЯ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржХрж░рж╛ ржХржарж┐ржи рж╣рзЯрзЗ ржкрзЬрзЗред

// рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржЯрзЗржмрж┐рж▓:

// Input size (n)   | Number of operations (n!)
// -------------------------------------------
// 3                | 6
// 4                | 24
// 5                | 120
// 10               | 3,628,800

// рждрж╛ржЗ ржпржЦржи ржХрж╛ржЬрзЗрж░ рж╕ржВржЦрзНржпрж╛ permutations ржмрж╛ рж╕рж╛ржЬрж╛ржирзЛрж░ ржЙржкрж╛рзЯ ржжрзЗржЦрзЗ рж╣рж┐рж╕рж╛ржм ржХрж░рждрзЗ рж╣рзЯ,
// рждржЦржи factorial ржЯрж╛ржЗржо ржХржоржкрзНрж▓рзЗржХрзНрж╕рж┐ржЯрж┐ рж╣рзЯ, ржпрж╛ ржжрзНрж░рзБржд ржмрзЗрзЬрзЗ ржпрж╛рзЯ ржПржмржВ рж╕рзНрж▓рзЛ рж╣рзЯрзЗ ржпрж╛рзЯред
